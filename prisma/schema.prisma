datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @unique //matches kinde user id
  email String @unique 

  File File[]
  Message Message[]

  paystackCustomerId String? @unique @map(name: "paystack_customer_id")
  paystackSubscriptionId String? @unique @map(name: "paystack_subscription_id")
  paystackPriceId String? @unique @map(name: "paystack_price_id")
  paystackCurrentPeriodEnd String? @unique @map(name: "paystack_current_period_id")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id   String @id @default(cuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url      String
  key      String
  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Message {
  id   String @id @default(cuid())
  text String @db.Text()

  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  File      File?    @relation(fields: [fileId], references: [id])
  fileId    String?
}

generator client {
  provider = "prisma-client-js"
}
